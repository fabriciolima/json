buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
}
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gs-accessing-data-mysql'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
// https://mvnrepository.com/artifact/com.google.api/gax

	//providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	providedRuntime 'org.springframework.boot:spring-boot-starter-web'

    compile("org.springframework.boot:spring-boot-starter-web")
    // https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
	compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.5'
	
    
    compile 'com.google.firebase:firebase-admin:5.8.0'
    

    // https://mvnrepository.com/artifact/com.google.api/gax
	//compile group: 'com.google.api', name: 'gax', version: '0.2.0'
    
    

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
	compile group: 'org.hibernate', name: 'hibernate-spatial', version: '5.1.0.Final'


    compile files('javaxt-core.jar')
    compile files('json-20160810.jar')
    compile files('json-simple-1.1.jar')
    compile files('jsoup-1.11.2.jar')
    

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

